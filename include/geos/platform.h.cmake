/**********************************************************************
 *
 * platform.h - generated by CMake from platform.h.cmake
 *
 * GEOS - Geometry Engine Open Source
 * http://geos.osgeo.org
 *
 * Copyright (C) 2009 Mateusz Loskot
 * Copyright (C) 2005-2009 Refractions Research Inc.
 * Copyright (C) 2001-2009 Vivid Solutions Inc.
 *
 * This is free software; you can redistribute and/or modify it under
 * the terms of the GNU Lesser General Public Licence as published
 * by the Free Software Foundation.
 * See the COPYING file for more information.
 *
 *********************************************************************/

#pragma once

#include <cinttypes>

typedef int64_t   int64;
typedef long int  int64;
typedef long long int int64;


#ifndef ISNAN
#endif


#if defined(_MSC_VER) && _MSC_VER >= 1200 // VC++ 6.0 and above
#  include <float.h>
#  define FINITE(x) _finite(x)
#  define ISNAN(x) _isnan(x)
#elif defined(__sun) && defined(__SVR4) //Solaris
#  include <ieeefp.h>
#  define FINITE(x) finite(x)
#  define ISNAN(x) isnan(x)
#else
#  include <cmath>
#  define FINITE(x) std::isfinite(x)
#  define ISNAN(x) std::isnan(x)
#endif



// Defines NaN for Intel platforms
#define DoubleNotANumber std::numeric_limits<double>::quiet_NaN()

// Some handy constants
#define DoubleMax (std::numeric_limits<double>::max)()
#define DoubleInfinity (std::numeric_limits<double>::infinity)()
#define DoubleNegInfinity (-(std::numeric_limits<double>::infinity)())

